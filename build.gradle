group = "com.er453r.calendars"
version = "0.0.1"

buildscript {
    ext {
        kotlin_version = '1.3.10'
        main = 'app'
    }
    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
    }
}


apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlin-dce-js'

sourceSets {
    main.kotlin.srcDirs += "src"
    main.resources.srcDirs += "res"
}

compileKotlin2Js {
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
    kotlinOptions.moduleKind = 'commonjs' // this is required or kotlin std lib won't be included by webpack
}

kotlinFrontend {
    sourceMaps = true

    npm {
        dependency("kotlin", "$kotlin_version")
        dependency "jspdf"
        dependency "ace-builds"

        devDependency "ts2kt" // use this for inspiration - but roll your own mini-wrappers by hand - automatic ones are a mess
        devDependency "@types/jspdf" // use this for inspiration - but roll your own mini-wrappers by hand - automatic ones are a mess
    }

    webpackBundle {
        bundleName = "app"
        mode = "development" // production is slow
        sourceMapEnabled = true
    }
}

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.0.1"
}

clean.doFirst() {
    logger.lifecycle("Cleaning dist dir...")

    delete("dist")
}

build.doLast() {
    logger.lifecycle("Copying to dist...")

    copy {
        from "res"
        into "dist"
    }

    copy {
        from file("build/bundle/app.bundle.js")
        into "dist/js"
        rename { 'app.js' }
    }

    copy {
        from file("build/bundle/app.bundle.js.map")
        into "dist/js"
    }
}
